#include <iostream>
#include <thread>
#include <mutex>
#include <vector>

using namespace std;

class PankkiTili {
public:
    int saldo;
    PankkiTili() : saldo(0), talletus_count(0), nosto_count(0) {}

    void tallenna(int maara) {
        lock_guard<mutex> guard(tili_mutex);
        saldo += maara;
        talletus_count++;
        //cout << "Talletettu: " << maara << ", Uusi saldo: " << saldo << endl;
    }

    void nosta(int maara) {
        lock_guard<mutex> guard(tili_mutex);
        if (saldo >= maara) {
            saldo -= maara;
            nosto_count++;
            //cout << "Nostettu: " << maara << ", Uusi saldo: " << saldo << endl;
        } else {
            //cout << "Nosto epäonnistui: " << maara << ", Saldo: " << saldo << endl;
        }
    }

    int haeSaldo() const {
        lock_guard<mutex> guard(tili_mutex);
        return saldo;
    }

    int getTalletusCount() const {
        lock_guard<mutex> guard(tili_mutex);
        return talletus_count;
    }

    int getNostoCount() const {
        lock_guard<mutex> guard(tili_mutex);
        return nosto_count;
    }

private:
    int talletus_count;
    int nosto_count;
    mutable mutex tili_mutex;
};

void teeTalletus(PankkiTili& tili, int maara, int toistot) {
    for (int i = 0; i < toistot; i++) {
        tili.tallenna(maara);
    }
}

void teeNosto(PankkiTili& tili, int maara, int toistot) {
    for (int i = 0; i < toistot; i++) {
        tili.nosta(maara);
    }
}

int main() {
    PankkiTili tili;
    const int siirrot = 100;
    const int maara = 1;

    thread t1(teeTalletus, ref(tili), maara, siirrot);
    thread t2(teeNosto, ref(tili), maara, siirrot);

    t1.join();
    t2.join();

    cout << "Lopullinen saldo: " << tili.haeSaldo() << endl;
    cout << "Talletuksia: " << tili.getTalletusCount() << endl;
    cout << "Nostoja: " << tili.getNostoCount() << endl;

    if (tili.haeSaldo() > 0) {
        cout << "Soitetaan asiakaspalveluun" << endl;
        cout << "Odotetaan 3 pankkipäivää" << endl;
        tili.saldo = 0;
        cout << "Saldo on nyt " << tili.haeSaldo() << endl;
    }
    return 0;
}